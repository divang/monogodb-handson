1- Start MongoDB without access control
> mongod --port 27017 --dbpath /var/lib/mongodb

2- Connect to the instance
> mongo --port 27017

3- Create the user administrator. A user with the userAdminAnyDatabase role in the admin database. Starting in version 4.2 of the mongo shell, you can use the passwordPrompt() method
> use admin
> db.createUser(
  {
    user: "myUserAdmin",
    pwd: passwordPrompt(), 
    roles: [ { role: "userAdminAnyDatabase", db: "admin" }, "readWriteAnyDatabase" ]
  }
)

4- Re-start the MongoDB instance with access control
> db.adminCommand( { shutdown: 1 } )
Exit the mongo shell

5- Start MongoDB instance
> mongod --auth --port 27017 --dbpath /var/lib/mongodb

6- Connect and authenticate as the user administrator.
> mongo --port 27017  --authenticationDatabase "admin" -u "myUserAdmin" -p

7- Create additional users as needed for your deployment: Adds a user myTester to the test database 
who has readWrite role in the test database as well as read role in the reporting database.
> use test
> db.createUser(
  {
    user: "myTester",
    pwd:  passwordPrompt(),   
    roles: [ { role: "readWrite", db: "test" },
             { role: "read", db: "reporting" } ]
  }
)

8- Connect to the instance and authenticate as myTester (while connection)
> mongo --port 27017 -u "myTester" --authenticationDatabase "test" -p

9- Insert a document as myTester.
> db.foo.insert( { x: 1, y: 1 } )

10- Authenticate after connection
> use test
> db.auth("myTester", passwordPrompt()) 
