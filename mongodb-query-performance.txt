Analyze Query Performance:

1- Below method provide statistics about the performance of a query:
>  db.collection.explain("executionStats")

2- Insert data without index
> db.inventory.insertMany([
    { "_id" : 1, "item" : "f1", type: "food", quantity: 500 },
    { "_id" : 2, "item" : "f2", type: "food", quantity: 100 },
    { "_id" : 3, "item" : "p1", type: "paper", quantity: 200 },
    { "_id" : 4, "item" : "p2", type: "paper", quantity: 150 },
    { "_id" : 5, "item" : "f3", type: "food", quantity: 300 },
    { "_id" : 6, "item" : "t1", type: "toys", quantity: 500 },
    { "_id" : 7, "item" : "a1", type: "apparel", quantity: 250 },
    { "_id" : 8, "item" : "a2", type: "apparel", quantity: 400 },
    { "_id" : 9, "item" : "t2", type: "toys", quantity: 50 },
    { "_id" : 10, "item" : "f4", type: "food", quantity: 75 }
]);

3- Query without index:
> db.inventory.find( { quantity: { $gte: 100, $lte: 200 } } )

4- Run query with analyzer:
> db.inventory.find( { quantity: { $gte: 100, $lte: 200 } } ).explain("executionStats")

output>
  .....
	"winningPlan" : {
						"stage" : "COLLSCAN",
						"filter" : {
  .....
  .....
  "executionStats" : {
		"nReturned" : 3,
		"executionTimeMillis" : 1,
		"totalKeysExamined" : 0,
		"totalDocsExamined" : 10,
   .....
   
5- queryPlanner.winningPlan.stage displays COLLSCAN to indicate a collection scan. 
Collection scans indicate that the mongod had to scan the entire collection (can result in slow queries).

6- executionStats.nReturned displays 3 to indicate that the query matches and returns three documents.

7- executionStats.totalKeysExamined displays 0 to indicate that this is query is not using an index.
