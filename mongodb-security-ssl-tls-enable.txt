1- Install openssl

2- One has to generate a signing key specific to the certificate authority. This will be used to sign other certificates. 
> create a folder as 'certificates'
> openssl req -new -x509 -days 365 -keyout ca-key.pem -out ca-crt.pem

3- Generate a private key for the server
>openssl genrsa -out server-key.pem 4096

4- Generate a signing request [Note: common name is applied as FQDN. For local setup use, localhost]
> openssl req -new -sha256 -key server-key.pem -out server-csr.pem

5- Perform the signing
> openssl x509 -req -days 365 -in server-csr.pem -CA ca-crt.pem -CAkey ca-key.pem -CAcreateserial -out server-crt.pem

output>
subject=/C=IN/ST=KA/L=BAN/O=XYZ/OU=IT/CN=localhost/emailAddress=a@b.c

***6- If a client x.509 certificateâ€™s subject has the same O, OU, and DC combination as the Member x.509 Certificate, 
the client will be identified as a cluster member and granted full permission on the system.

7- Create pem file which need for mongoDB 
> cat server-key.pem  server-crt.pem >skey.pem
*[In windows, use 'type' in place of `cat`]

8- Generating certificate for first client
> openssl genrsa -out clientA-key.pem 4096

9- Generate a signing request
> openssl req -new -sha256 -key clientA-key.pem -out clientA-csr.pem

10- Perform the signing
> openssl x509 -req -days 365 -in clientA-csr.pem -CA ca-crt.pem -CAkey ca-key.pem -CAcreateserial -out clientA-crt.pem

output>
subject=/C=IN/ST=KA/L=BAN/O=client1-org/OU=SW/CN=client1/emailAddress=client@x.z

11- Create pem file which need for mongo client
> cat clientA-key.pem clientA-crt.pem > clientAKey.pem
*[In windows, use 'type' in place of `cat`]

12- Now start the server without ssl and add the above user via mongo shell. Run server
> mongod --dbpath /opt/mongodb/data

13- Run mongo Client and add the above client subject as User name.
> db.getSiblingDB("$external").runCommand(
  {
    createUser: "CN=client1,OU=SW,O=client1-org,L=BAN,ST=KA,C=IN",
    roles: [
         { role: "readWrite", db: "test" },
    ],
    writeConcern: { w: "majority" , wtimeout: 5000 }
  }
)
>exit

14- Stop the non-ssl mongod server and run server with ssl enabled and authenticate with user name
> mongod --sslMode requireSSL --sslPEMKeyFile skey.pem --sslCAFile ca-crt.pem  --bind_ip localhost --dbpath /opt/mongodb/data --clusterAuthMode x509

9- Now connect the Sever with SSL certificate
> mongo --ssl --host localhost --sslPEMKeyFile clientAKey.pem --sslCAFile ca-crt.pem --authenticationDatabase '$external' --authenticationMechanism MONGODB-X509
